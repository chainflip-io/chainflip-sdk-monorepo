// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`python integration test > replies to a quote request 1`] = `
{
  "message": "[
  {
    "code": "invalid_union",
    "unionErrors": [
      {
        "issues": [
          {
            "code": "invalid_type",
            "expected": "number",
            "received": "undefined",
            "path": [
              "balances",
              "Solana",
              "USDC"
            ],
            "message": "Required"
          }
        ],
        "name": "ZodError"
      },
      {
        "issues": [
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "undefined",
            "path": [
              "balances",
              "Solana",
              "USDC"
            ],
            "message": "Required"
          }
        ],
        "name": "ZodError"
      }
    ],
    "path": [
      "balances",
      "Solana",
      "USDC"
    ],
    "message": "Invalid input"
  },
  {
    "code": "invalid_union",
    "unionErrors": [
      {
        "issues": [
          {
            "code": "invalid_type",
            "expected": "number",
            "received": "undefined",
            "path": [
              "earned_fees",
              "Solana",
              "USDC"
            ],
            "message": "Required"
          }
        ],
        "name": "ZodError"
      },
      {
        "issues": [
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "undefined",
            "path": [
              "earned_fees",
              "Solana",
              "USDC"
            ],
            "message": "Required"
          }
        ],
        "name": "ZodError"
      }
    ],
    "path": [
      "earned_fees",
      "Solana",
      "USDC"
    ],
    "message": "Invalid input"
  },
  {
    "code": "invalid_type",
    "expected": "array",
    "received": "undefined",
    "path": [
      "boost_balances",
      "Solana",
      "USDC"
    ],
    "message": "Required"
  }
]",
}
`;

exports[`python integration test > replies to a quote request 2`] = `
[
  [
    {
      "brokerCommissionBps": undefined,
      "dcaParams": undefined,
      "depositAmount": 1000000000000000000n,
      "destAsset": "Usdc",
      "excludeFees": [],
      "limitOrders": [
        {
          "LimitOrder": {
            "base_asset": {
              "asset": "FLIP",
              "chain": "Ethereum",
            },
            "quote_asset": {
              "asset": "USDC",
              "chain": "Ethereum",
            },
            "sell_amount": "0xde0b6b3a7640000",
            "side": "buy",
            "tick": -1,
          },
        },
      ],
      "srcAsset": "Flip",
    },
  ],
]
`;

exports[`python integration test > replies to a quote request with v2 endpoint 1`] = `
{
  "message": "[
  {
    "code": "invalid_union",
    "unionErrors": [
      {
        "issues": [
          {
            "code": "invalid_type",
            "expected": "number",
            "received": "undefined",
            "path": [
              "balances",
              "Solana",
              "USDC"
            ],
            "message": "Required"
          }
        ],
        "name": "ZodError"
      },
      {
        "issues": [
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "undefined",
            "path": [
              "balances",
              "Solana",
              "USDC"
            ],
            "message": "Required"
          }
        ],
        "name": "ZodError"
      }
    ],
    "path": [
      "balances",
      "Solana",
      "USDC"
    ],
    "message": "Invalid input"
  },
  {
    "code": "invalid_union",
    "unionErrors": [
      {
        "issues": [
          {
            "code": "invalid_type",
            "expected": "number",
            "received": "undefined",
            "path": [
              "earned_fees",
              "Solana",
              "USDC"
            ],
            "message": "Required"
          }
        ],
        "name": "ZodError"
      },
      {
        "issues": [
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "undefined",
            "path": [
              "earned_fees",
              "Solana",
              "USDC"
            ],
            "message": "Required"
          }
        ],
        "name": "ZodError"
      }
    ],
    "path": [
      "earned_fees",
      "Solana",
      "USDC"
    ],
    "message": "Invalid input"
  },
  {
    "code": "invalid_type",
    "expected": "array",
    "received": "undefined",
    "path": [
      "boost_balances",
      "Solana",
      "USDC"
    ],
    "message": "Required"
  }
]",
}
`;

exports[`python integration test > replies to a quote request with v2 endpoint 2`] = `
[
  [
    {
      "brokerCommissionBps": undefined,
      "dcaParams": undefined,
      "depositAmount": 1000000000000000000n,
      "destAsset": "Usdc",
      "excludeFees": [],
      "limitOrders": [
        {
          "LimitOrder": {
            "base_asset": {
              "asset": "FLIP",
              "chain": "Ethereum",
            },
            "quote_asset": {
              "asset": "USDC",
              "chain": "Ethereum",
            },
            "sell_amount": "0xde0b6b3a7640000",
            "side": "buy",
            "tick": -1,
          },
        },
      ],
      "srcAsset": "Flip",
    },
  ],
  [
    {
      "brokerCommissionBps": undefined,
      "dcaParams": undefined,
      "depositAmount": 1000000000000000000n,
      "destAsset": "Usdc",
      "excludeFees": [],
      "limitOrders": [
        {
          "LimitOrder": {
            "base_asset": {
              "asset": "FLIP",
              "chain": "Ethereum",
            },
            "quote_asset": {
              "asset": "USDC",
              "chain": "Ethereum",
            },
            "sell_amount": "0xde0b6b3a7640000",
            "side": "buy",
            "tick": -1,
          },
        },
      ],
      "srcAsset": "Flip",
    },
  ],
]
`;
