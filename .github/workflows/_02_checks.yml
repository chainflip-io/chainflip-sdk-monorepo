on:
  workflow_call:
    inputs:
      package:
        description: 'Package to lint'
        type: string
        default: 'all'

env:
  FORCE_COLOR: 1
  DB_NAME: 'swap'
  DB_USER: 'postgres'
  DB_PASS: 'postgres'
  DB_PORT: '5432'
  DATABASE_URL: 'postgresql://postgres:postgres@localhost:5432/swap?schema=public'

jobs:
  generate-matrix:
    uses: ./.github/workflows/_utils_generate_matrix.yml
    with:
      package: ${{ inputs.package }}

  test:
    needs: [generate-matrix]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.generate-matrix.outputs.matrix).package }}
        node_version: ${{ fromJson(needs.generate-matrix.outputs.matrix).node_version }}
        include: ${{ fromJson(needs.generate-matrix.outputs.matrix).include }}
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Install pnpm 💿
        run: npm i -g pnpm@10

      - name: Setup Node.js ${{ matrix.node_version }} 🎮
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: ${{ matrix.node_version }}
          cache: 'pnpm'

      - name: Install dependencies 📦
        run: |
          for i in {1..5}
          do
            pnpm install && break
            sleep 10
          done

      - name: Setup Python 🐍
        if: matrix.package == 'swap'
        uses: actions/setup-python@5db1cf9a59fb97c40a68accab29236f0da7e94db
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Docker Compose Action 🐳
        if: matrix.package == 'swap'
        uses: isbang/compose-action@178aeba5c9dbeed89ffffbb3e6548ec08e9839cf
        with:
          compose-file: ./packages/swap/docker-compose.yml

      - name: Install Python Dependencies 🐍📦
        if: matrix.package == 'swap'
        run: pip install -r packages/swap/python-client/requirements.txt

      - name: Migrate database 🗃️
        if: matrix.package == 'swap'
        run: pnpm run --dir=packages/${{ matrix.package }} migrate:deploy

      - name: Run Test ${{ matrix.package }} 🧪
        run: pnpm run --dir=packages/${{ matrix.package }} test:ci

      - name: Upload coverage to Codecov ☂️
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d
        if: startsWith(matrix.node_version, '18')
        with:
          flags: ${{ matrix.package }}
          fail_ci_if_error: false
          token: ${{ secrets.CF_SDK_CODECOV_TOKEN }}

  build:
    needs: [generate-matrix]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.generate-matrix.outputs.matrix).package }}
        node_version: ${{ fromJson(needs.generate-matrix.outputs.matrix).node_version }}
        include: ${{ fromJson(needs.generate-matrix.outputs.matrix).include }}
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Install pnpm 💿
        run: npm i -g pnpm@10

      - name: Setup Node.js ${{ matrix.node_version }} 🎮
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: ${{ matrix.node_version }}
          cache: 'pnpm'

      - name: Install dependencies 📦
        run: |
          for i in {1..5}
          do
            pnpm install && break
            sleep 10
          done

      - name: Run build ${{ matrix.package }} 🏗️
        run: pnpm run --dir=packages/${{ matrix.package }} build
