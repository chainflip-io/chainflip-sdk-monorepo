on:
  workflow_call:

env:
  FORCE_COLOR: 1
  DB_NAME: "swap"
  DB_USER: "postgres"
  DB_PASS: "postgres"
  DB_PORT: "5432"
  DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/swap?schema=public"

jobs:
  get-node-version:
    uses: ./.github/workflows/_node_context.yml

  test:
    needs: [get-node-version]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [shared, sdk, swap, cli]
      fail-fast: false
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Install pnpm 💿
        run: npm i -g pnpm@8

      - name: Setup Node.js ${{ needs.get-node-version.outputs.node_version }} 🎮
        uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.get-node-version.outputs.node_version }}
          cache: 'pnpm'

      - name: Install dependencies 📦
        run: |
            for i in {1..5}
            do
              pnpm install && break
              sleep 10
            done

      - name: Setup Python 🐍
        if: matrix.package == 'swap'
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Docker Compose Action 🐳
        if: matrix.package == 'swap'
        uses: isbang/compose-action@v1.4.1
        with:
          compose-file: ./packages/swap/docker-compose.yml

      - name: Install Python Dependencies 🐍📦
        if: matrix.package == 'swap'
        run: pip install -r packages/swap/python-client/requirements.txt

      - name: Migrate database 🗃️
        if: matrix.package == 'swap'
        run: pnpm --filter swap exec pnpm prisma migrate dev

      - name: Run Test ${{ matrix.package }} 🧪
        run: pnpm run test:ci:${{ matrix.package }}

      - name: Upload coverage to Codecov ☂️
        uses: codecov/codecov-action@v3
        with:
          flags: ${{ matrix.package }}
          fail_ci_if_error: true

  build:
    needs: [get-node-version]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [shared, sdk, swap, cli]
      fail-fast: false
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Install pnpm 💿
        run: npm i -g pnpm@8

      - name: Setup Node.js ${{ needs.get-node-version.outputs.node_version }} 🎮
        uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.get-node-version.outputs.node_version }}
          cache: 'pnpm'

      - name: Install dependencies 📦
        run: |
            for i in {1..5}
            do
              pnpm install && break
              sleep 10
            done

      - name: Run build ${{ matrix.package }} 🏗️
        run: pnpm run build:${{ matrix.package }}
